% ************************************************************************
%   Description:
%   SUBROUTINE PMUT1_OCEANS (rjd,cor_x,cor_y,cor_ut1,cor_lod) 
%   This subroutine provides, in time domain, the diurnal/subdiurnal
%   tidal effets on polar motion ("), UT1 (s) and LOD (s). The tidal terms,
%   listed in the program above, have been extracted from the procedure   
%   ortho_eop.f coed by Eanes in 1997.
%     
%   N.B.:  The fundamental lunisolar arguments are those of Simon et al.  
% 
%   These corrections should be added to "average"
%   EOP values to get estimates of the instantaneous values.
%           
%               * vectorised *
%
%   Input:
%     rjd            epoch of interest given in mjd (n,1) - dynamical
%                    time or TT
%     nam            name of model (table of coefficients); 'string', to be
%                    stored in ..\EOP\eophf\*.dat; (optional) 
%                
%   Output:
%     cor_x          tidal correction in x (sec. of arc) (n,1)
%     cor_y          tidal correction in y (sec. of arc) (n,1)
%     cor_ut1        tidal correction in UT1-UTC (sec. of time) (n,1)
%     cor_lod        tidal correction in length of day (sec. of time) (n,1)
%    
% 
%   External calls: 	
%     fund_arg.m
%
%   SOFA routine coded by Ch. Bizouard (2002), initially coded by McCarthy 
%   and D.Gambis(1997) for the 8 prominent tidal waves.
%
%   Coded for VieVS:
%   02 Feb 2009 by Lucia Plank
%
%   Revision: 
%   26 May 2010 by Lucia Plank: external function for fundamental
%       arguments; enable table of coefficient for model 'nam'.
%   13 Aug 2010 by Lucia Plank: implemented Conventions update; new tables
%       8.2 & 8.3 (one digit less than in the routine interp.f)
%
% *************************************************************************


function [cor_x,cor_y,cor_ut1] = eop_ocean(rjd,nam)

NARG=[];
if (nargin > 1)
    switch nam
        case 'ortho_eop (Conventions)' 
        otherwise
        NARG = load (strcat('../EOP/eophf/',nam));
        fprintf(nam);
        fprintf('\n');
    end
end
if isempty (NARG) 
  fprintf('ortho_eop (Conventions)');fprintf('\n');
% ----------------
%  DATA
% ----------------
      
%   Oceanic tidal terms present in x (microas),y(microas),ut1(microseconds)       
%   NARG(j,6) : Multipliers of GMST+pi and Delaunay arguments. 
%   Data directly extraced from table 8.2 & 8.3 of Conventions July/2010
	
       NARG=[... 
  
     1,-1, 0,-2,-2,-2,   0.0,   0.9,  -0.9,  -0.1,  0.40, -0.08
     1,-2, 0,-2, 0,-1,   0.1,   0.6,  -0.6,   0.1,  0.19, -0.06
     1,-2, 0,-2, 0,-2,   0.3,   3.4,  -3.4,   0.3,  1.03, -0.31
     1, 0, 0,-2,-2,-1,   0.1,   0.8,  -0.8,   0.1,  0.22, -0.07
     1, 0, 0,-2,-2,-2,   0.5,   4.2,  -4.1,   0.5,  1.19, -0.39
     1,-1, 0,-2, 0,-1,   1.2,   5.0,  -5.0,   1.2,  0.97, -0.47
     1,-1, 0,-2, 0,-2,   6.2,  26.3, -26.3,   6.2,  5.12, -2.50
     1, 1, 0,-2,-2,-1,   0.2,   0.9,  -0.9,   0.2,  0.17, -0.09
     1, 1, 0,-2,-2,-2,   1.3,   5.0,  -5.0,   1.3,  0.91, -0.47
     1, 0, 0,-2, 0, 0,  -0.3,  -0.8,   0.8,  -0.3, -0.09,  0.07
     1, 0, 0,-2, 0,-1,   9.2,  25.1, -25.1,   9.2,  3.03, -2.28
     1, 0, 0,-2, 0,-2,  48.8, 132.9,-132.9,  48.8, 16.02,-12.07
     1,-2, 0, 0, 0, 0,  -0.3,  -0.9,   0.9,  -0.3, -0.10,  0.08
     1, 0, 0, 0,-2, 0,  -0.7,  -1.7,   1.7,  -0.7, -0.19,  0.15
     1,-1, 0,-2, 2,-2,  -0.4,  -0.9,   0.9,  -0.4, -0.08,  0.07
     1, 1, 0,-2, 0,-1,  -0.3,  -0.6,   0.6,  -0.3, -0.06,  0.05
     1, 1, 0,-2, 0,-2,  -1.6,  -3.5,   3.5,  -1.6, -0.31,  0.27
     1,-1, 0, 0, 0, 0,  -4.5,  -9.6,   9.6,  -4.5, -0.86,  0.75
     1,-1, 0, 0, 0,-1,  -0.9,  -1.9,   1.9,  -0.9, -0.17,  0.15
     1, 1, 0, 0,-2, 0,  -0.9,  -1.8,   1.8,  -0.9, -0.16,  0.14
     1, 0,-1,-2, 2,-2,   1.5,   3.0,  -3.0,   1.5,  0.31, -0.19
     1, 0, 0,-2, 2,-1,  -0.3,  -0.6,   0.6,  -0.3, -0.06,  0.03
     1, 0, 0,-2, 2,-2,  26.1,  51.2, -51.2,  26.1,  5.51, -3.10
     1, 0, 1,-2, 2,-2,  -0.2,  -0.4,   0.4,  -0.2, -0.05,  0.02
     1, 0,-1, 0, 0, 0,  -0.6,  -1.2,   1.2,  -0.6, -0.13,  0.07
     1, 0, 0, 0, 0, 1,   1.5,   3.0,  -3.0,   1.5,  0.35, -0.17
     1, 0, 0, 0, 0, 0, -77.5,-151.7, 151.7, -77.5,-17.62,  8.55
     1, 0, 0, 0, 0,-1, -10.5, -20.6,  20.6, -10.5, -2.39,  1.16
     1, 0, 0, 0, 0,-2,   0.2,   0.4,  -0.4,   0.2,  0.05, -0.03
     1, 0, 1, 0, 0, 0,  -0.6,  -1.2,   1.2,  -0.6, -0.14,  0.06
     1, 0, 0, 2,-2, 2,  -1.1,  -2.1,   2.1,  -1.1, -0.27,  0.11
     1,-1, 0, 0, 2, 0,  -0.7,  -1.4,   1.4,  -0.7, -0.29,  0.04
     1, 1, 0, 0, 0, 0,  -3.5,  -7.3,   7.3,  -3.5, -1.61,  0.19
     1, 1, 0, 0, 0,-1,  -0.7,  -1.4,   1.4,  -0.7, -0.32,  0.04
     1, 0, 0, 0, 2, 0,  -0.4,  -1.1,   1.1,  -0.4, -0.41, -0.01
     1, 2, 0, 0, 0, 0,  -0.2,  -0.5,   0.5,  -0.2, -0.21, -0.01
     1, 0, 0, 2, 0, 2,  -1.1,  -3.4,   3.4,  -1.1, -1.44, -0.04
     1, 0, 0, 2, 0, 1,  -0.7,  -2.2,   2.2,  -0.7, -0.92, -0.02
     1, 0, 0, 2, 0, 0,  -0.1,  -0.5,   0.5,  -0.1, -0.19,  0.00
     1, 1, 0, 2, 0, 2,   0.0,  -0.6,   0.6,   0.0, -0.40, -0.02
     1, 1, 0, 2, 0, 1,   0.0,  -0.4,   0.4,   0.0, -0.25, -0.02
     2,-3, 0,-2, 0,-2,  -0.5,   0.0,   0.6,   0.2, -0.09, -0.01
     2,-1, 0,-2,-2,-2,  -1.3,  -0.2,   1.5,   0.7, -0.22, -0.03
     2,-2, 0,-2, 0,-2,  -6.1,  -1.6,   3.1,   3.4, -0.64, -0.18
     2, 0, 0,-2,-2,-2,  -7.6,  -2.0,   3.4,   4.2, -0.74, -0.22
     2, 0, 1,-2,-2,-2,  -0.5,  -0.1,   0.2,   0.3, -0.05, -0.02
     2,-1,-1,-2, 0,-2,   0.5,   0.1,  -0.1,  -0.3,  0.03,  0.01
     2,-1, 0,-2, 0,-1,   2.1,   0.5,  -0.4,  -1.2,  0.14,  0.06
     2,-1, 0,-2, 0,-2, -56.9, -12.9,  11.1,  32.9, -3.79, -1.56
     2,-1, 1,-2, 0,-2,  -0.5,  -0.1,   0.1,   0.3, -0.03, -0.01
     2, 1, 0,-2,-2,-2, -11.0,  -2.4,   1.9,   6.4, -0.70, -0.30
     2, 1, 1,-2,-2,-2,  -0.5,  -0.1,   0.1,   0.3, -0.03, -0.01
     2,-2, 0,-2, 2,-2,   1.0,   0.1,  -0.1,  -0.6,  0.05,  0.02
     2, 0,-1,-2, 0,-2,   1.1,   0.1,  -0.1,  -0.7,  0.06,  0.03
     2, 0, 0,-2, 0,-1,  12.3,   1.0,  -1.4,  -7.3,  0.60,  0.27
     2, 0, 0,-2, 0,-2,-330.2, -27.0,  37.6, 195.9,-16.19, -7.25 %7.14
     2, 0, 1,-2, 0,-2,  -1.0,  -0.1,   0.1,   0.6, -0.05, -0.02
     2,-1, 0,-2, 2,-2,   2.5,  -0.3,  -0.4,  -1.5,  0.11,  0.03
     2, 1, 0,-2, 0,-2,   9.4,  -1.4,  -1.9,  -5.6,  0.42,  0.12
     2,-1, 0, 0, 0, 0,  -2.4,   0.4,   0.5,   1.4, -0.11, -0.03
     2,-1, 0, 0, 0,-1,  -1.0,   0.2,   0.2,   0.6, -0.05, -0.01
     2, 0,-1,-2, 2,-2,  -8.5,   3.5,   3.3,   5.1, -0.44, -0.02
     2, 0, 0,-2, 2,-2,-144.1,  63.6,  59.2,  86.6, -7.55, -0.16
     2, 0, 1,-2, 2,-2,   1.2,  -0.6,  -0.5,  -0.7,  0.06,  0.00
     2, 0, 0, 0, 0, 1,   0.5,  -0.2,  -0.2,  -0.3,  0.03,  0.00
     2, 0, 0, 0, 0, 0, -38.5,  19.1,  17.7,  23.1, -2.10,  0.04
     2, 0, 0, 0, 0,-1, -11.4,   5.8,   5.3,   6.9, -0.63,  0.01
     2, 0, 0, 0, 0,-2,  -1.2,   0.6,   0.6,   0.7, -0.07,  0.00
     2, 1, 0, 0, 0, 0,  -1.8,   1.8,   1.7,   1.0, -0.15,  0.04
     2, 1, 0, 0, 0,-1,  -0.8,   0.8,   0.8,   0.5, -0.06,  0.01
     2, 0, 0, 2, 0, 2,  -0.3,   0.6,   0.7,   0.2, -0.05,  0.02];
end
% ------------------------
%  TIME Vector
% ------------------------
 
      T  = (rjd - 51544.5D0)/36525.0D0; % julian centuries
      
% ------------------------
% FUNDAMENTAL ARGUMENTS
% ------------------------
      
       ARG = fund_arg(T,3); % [rad]

% --------------------------
%  CALCULATE CORRECTIONS
% --------------------------
    
XSIN = NARG(:,7);XCOS = NARG(:,8);YSIN = NARG(:,9);YCOS = NARG(:,10);
UTSIN = NARG(:,11);UTCOS = NARG(:,12);

 
    arg  = NARG (:,1:6)*ARG';
    arg  = mod (arg,2*pi);

 %   darg = NARG (:,1:6)*DARG';
    
    cor_x   = XCOS'  * cos(arg) + XSIN'  * sin(arg);
    cor_y   = YCOS'  * cos(arg) + YSIN'  * sin(arg);
    cor_ut1 = UTCOS' * cos(arg) + UTSIN' * sin(arg);
  %  cor_lod = -(-UTCOS' * (sin(arg).*darg) + UTSIN' * (cos(arg).*darg));
    
% ------------
%  OUTPUT
% ------------    
    
    cor_x   = cor_x'   * 1.0d-6;     %    arcsecond (")
    cor_y   = cor_y'   * 1.0d-6;     %    arcsecond (")
    cor_ut1 = cor_ut1' * 1.0d-6;     %    second (s)
 %   cor_lod = cor_lod' * 1.0d-6;     %    second (s)
  
      	
